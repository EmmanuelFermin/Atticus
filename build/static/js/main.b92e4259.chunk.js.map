{"version":3,"sources":["components/UI/Card.js","components/UI/LoadingIndicator.js","components/Ingredients/IngredientForm.js","components/Ingredients/IngredientList.js","components/UI/ErrorModal.js","components/Ingredients/Search.js","components/Ingredients/Ingredients.js","App.js","index.js"],"names":["Card","props","react_default","a","createElement","className","children","LoadingIndicator","IngredientForm","React","memo","_useState","useState","_useState2","Object","slicedToArray","enteredTitle","setEnteredTitle","_useState3","_useState4","enteredAmount","setEnteredAmount","changeHandler","event","_event$target","target","value","id","components_UI_Card","onSubmit","preventDefault","onAddIngredient","title","amount","htmlFor","type","onChange","maxlength","loading","components_UI_LoadingIndicator","IngredientList","ingredients","map","ig","key","onClick","onRemoveItem","bind","style","marginTop","padding","width","height","color","backgroundColor","borderStyle","marginLeft","role","aria-label","ErrorModal","Fragment","onClose","Search","onLoadIngredients","enteredFilter","setEnteredFilter","inputRef","useRef","useEffect","timer","setTimeout","current","query","length","concat","fetch","then","response","json","responseData","loadedIngredients","push","clearTimeout","ref","Ingredients","userIngredients","setUserIngredients","isLoading","setIsLoading","_useState5","_useState6","error","setError","console","log","filteredIngredientsHandler","useCallback","filteredIngredients","UI_ErrorModal","Ingredients_IngredientForm","ingredient","method","body","JSON","stringify","headers","Content-Type","prevIngredients","toConsumableArray","objectSpread2","name","Ingredients_Search","components_Ingredients_IngredientList","prevValues","filter","item","catch","App","components_Ingredients_Ingredients","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.b92e4259.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return <div className=\"card\">{props.children}</div>;\n};\n\nexport default Card;\n","import React from 'react';\n\nimport './LoadingIndicator.css';\n\nconst LoadingIndicator = () => (\n  <div className=\"lds-ring\">\n    <div />\n    <div />\n    <div />\n    <div />\n  </div>\n);\n\nexport default LoadingIndicator;\n","import React, { useState } from 'react';\n\nimport Card from '../UI/Card';\nimport LoadingIndicator from '../UI/LoadingIndicator';\nimport './IngredientForm.css';\n\nconst IngredientForm = React.memo(props => {\n  const [enteredTitle, setEnteredTitle] = useState('');\n  const [enteredAmount, setEnteredAmount] = useState('');\n\n\n  const changeHandler = (event) => {\n    const { value, id } = event.target;\n\n    if (id === \"title\") {\n      setEnteredTitle(value);\n    } else if (id === \"amount\") {\n      setEnteredAmount(value);\n    }\n\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onAddIngredient({\n      title: enteredTitle,\n      amount: enteredAmount\n    });\n  };\n\n  return (\n    <section className=\"ingredient-form\">\n      <Card>\n        <form onSubmit={submitHandler}>\n          <div className=\"form-control\">\n            <label htmlFor=\"title\">Name</label>\n            <input\n              type=\"text\"\n              id=\"title\"\n              value={enteredTitle}\n              onChange={changeHandler}\n              maxlength=\"20\" />\n          </div>\n          <div className=\"form-control\">\n            <label htmlFor=\"amount\">Amount</label>\n            <input\n              type=\"number\"\n              id=\"amount\"\n              value={enteredAmount}\n              onChange={changeHandler}\n            />\n          </div>\n          <div className=\"ingredient-form__actions\">\n            <button type=\"submit\">Add Ingredient</button>\n            {props.loading && <LoadingIndicator />}\n          </div>\n        </form>\n      </Card>\n    </section>\n  );\n});\n\nexport default IngredientForm;\n","import React from 'react';\n\nimport './IngredientList.css';\n\nconst IngredientList = props => {\n  return (\n    <section className=\"ingredient-list\">\n      <h2>Loaded Ingredients</h2>\n      <ul>\n        {props.ingredients.map(ig => (\n          <li key={ig.id} onClick={props.onRemoveItem.bind(this, ig.id)}>\n            <span style={{ marginTop: \"10px\" }}>{ig.title}</span>\n            <div>\n              <span style={{ marginTop: \"10px\" }}>{ig.amount}x</span>\n              <button style={{\n                padding: \"0\",\n                width: \"30px\",\n                height: \"30px\",\n                color: \"red\",\n                backgroundColor: \"white\",\n                borderStyle: \"none\",\n                marginLeft: \"30px\"\n              }}\n                className=\"button-delete\"\n                title=\"delete\">\n                <span role=\"img\" aria-label=\"delete\">üóëÔ∏è</span>\n              </button>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nexport default IngredientList;\n","import React from 'react';\n\nimport './ErrorModal.css';\n\nconst ErrorModal = React.memo(props => {\n  return (\n    <React.Fragment>\n      <div className=\"backdrop\" onClick={props.onClose} />\n      <div className=\"error-modal\">\n        <h2>An Error Occurred!</h2>\n        <p>{props.children}</p>\n        <div className=\"error-modal__actions\">\n          <button type=\"button\" onClick={props.onClose}>\n            Okay\n          </button>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n});\n\nexport default ErrorModal;\n","import React, { useState, useEffect, useRef } from 'react';\n\nimport Card from '../UI/Card';\nimport './Search.css';\n\nconst Search = React.memo(props => {\n  const { onLoadIngredients } = props;\n  const [enteredFilter, setEnteredFilter] = useState('');\n  const inputRef = useRef();\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (enteredFilter === inputRef.current.value) {\n        const query = enteredFilter.length === 0\n          ? ''\n          : `?orderBy=\"title\"&equalTo=\"${enteredFilter}\"`;\n        fetch('https://react-hooks-update-4babb-default-rtdb.firebaseio.com/ingredients.json' + query)\n          .then(response => response.json())\n          .then(responseData => {\n            const loadedIngredients = [];\n            for (const key in responseData) {\n              loadedIngredients.push({\n                id: key,\n                title: responseData[key].title,\n                amount: responseData[key].amount\n              });\n            }\n            onLoadIngredients(loadedIngredients);\n          });\n      }\n    }, 500);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [enteredFilter, onLoadIngredients, inputRef]);\n\n  const changeHandler = event => {\n    const { value } = event.target;\n\n    setEnteredFilter(value);\n  };\n\n  return (\n    <section className=\"search\">\n      <Card>\n        <div className=\"search-input\">\n          <label>Filter by Title</label>\n          <input\n            ref={inputRef}\n            type=\"text\"\n            value={enteredFilter}\n            onChange={changeHandler} />\n        </div>\n      </Card>\n    </section>\n  );\n});\n\nexport default Search;\n","import React, { useState, useEffect, useCallback } from 'react';\n\nimport IngredientForm from './IngredientForm';\nimport IngredientList from './IngredientList';\nimport ErrorModal from '../UI/ErrorModal';\nimport Search from './Search';\n\n\nconst Ingredients = () => {\n  const [userIngredients, setUserIngredients] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  useEffect(() => {\n    console.log('RENDERING INGREDIENTS', userIngredients);\n  }, [userIngredients]);\n\n  const filteredIngredientsHandler = useCallback(filteredIngredients => {\n    setUserIngredients(filteredIngredients);\n  }, []);\n\n  const addIngredientHandler = ingredient => {\n    setIsLoading(true);\n    fetch('https://react-hooks-update-4babb-default-rtdb.firebaseio.com/ingredients.json', {\n      method: 'POST',\n      body: JSON.stringify(ingredient),\n      headers: { 'Content-Type': 'application/json' }\n    }).then(response => {\n      setIsLoading(false);\n      return response.json();\n    }).then(responseData => {\n      setUserIngredients(prevIngredients => [\n        ...prevIngredients,\n        { id: responseData.name, ...ingredient }\n      ]);\n    });\n  };\n\n  const removeIngredientsHandler = (id) => {\n    setIsLoading(true);\n    fetch(`https://react-hooks-update-4babb-default-rtdb.firebaseio.com/ingredients/${id}.json`, {\n      method: 'DELETE',\n    }).then(response => {\n      setIsLoading(false);\n      setUserIngredients(prevValues =>\n        prevValues.filter(item => item.id !== id)\n      );\n    }).catch(error => {\n      setError('Something went wrong!');\n      setIsLoading(false);\n    })\n  };\n\n  const clearError = () => {\n    setError(null);\n    \n  }\n\n  return (\n    <div className=\"App\">\n      {error && <ErrorModal onClose={clearError}>{error}</ErrorModal>}\n\n      <IngredientForm \n      onAddIngredient={addIngredientHandler} \n      loading={isLoading} \n    />\n\n      <section>\n        <Search onLoadIngredients={filteredIngredientsHandler} />\n        <IngredientList\n          ingredients={userIngredients}\n          onRemoveItem={removeIngredientsHandler} />\n      </section>\n    </div>\n  );\n}\n\nexport default Ingredients;\n","import React from 'react';\n\nimport Ingredients from './components/Ingredients/Ingredients';\n\nconst App = props => {\n  return <Ingredients />;\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}